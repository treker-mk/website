name: Build

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master
  workflow_dispatch:
    branches:
      - *

jobs:
  test:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Lint
        run: docker-compose -f docker-compose.test.yml run lint

      - name: Test
        run: docker-compose -f docker-compose.test.yml run test

  build:
    runs-on: ubuntu-18.04
    needs:
      - test
    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build docker image
        run: docker build -t image .

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/web
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [[ "${{ github.ref }}" == "refs/pull/"* ]] && VERSION=$(echo ${{ github.ref }} | awk -F/ '{print "pr-" $3}')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo "Image $IMAGE_ID:$VERSION"
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
